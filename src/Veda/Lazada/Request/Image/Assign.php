<?php
/**
 * User: ketu.lai <ketu.lai@gmail.com>
 * Date: 2017/2/6
 */
namespace Veda\Lazada\Request\Image;

use Veda\Lazada\Exception\InvalidArgumentException;
use Veda\Lazada\Request\RequestAbstract;
use Veda\Lazada\Utils\ArrayToXml;

class Assign extends RequestAbstract
{
    protected $sku;
    protected $images;
    protected $assignedArray = [];

    public function getAction()
    {
        return 'SetImages';
        // TODO: Implement getAction() method.
    }

    public function getMethod()
    {
        // TODO: Implement getMethod() method.
        return self::HTTP_METHOD_POST;
    }

    public function setSku($sku)
    {
        $this->sku = $sku;
    }

    public function addImage($image)
    {
        $this->images[] = $image;
    }

    public function setBatchData(array $batchData)
    {
        $this->assignedArray = $batchData;
    }

    protected function getRequestBody()
    {
        $images = [];
        if ($this->sku && $this->images) {
            $images[$this->sku] = $this->images;
        }
        if ($this->assignedArray) {
            $images = array_merge($images, $this->assignedArray);
        }
        $imagesData = [];
        if (!$images) {
            throw new InvalidArgumentException('no data in the request', __CLASS__);
        }
        foreach ($images as $sku => $image) {
            $skuData['SellerSku'] = $sku;
            foreach ($image as $img) {
                $skuData['Images'][] = [
                    'name' => 'Image',
                    'value' => $img
                ];
            }

            $imagesData[]['Sku'] = $skuData;
        }

        $data = [
            'Product' => [
                'Skus' => $imagesData
            ]
        ];
        $this->requestBody = ArrayToXml::convert($data, 'Request');

        return parent::getRequestBody(); // TODO: Change the autogenerated stub
    }
}